{"version":3,"sources":["ContactList/ContactList.module.css","App.module.css","Filter/Filter.module.css","redux/contacts.js/contacts-actions.js","redux/contacts.js/contacts-reducer.js","redux/store.js","redux/contacts.js/contacts-operations.js","ContactForm/ContactForm.js","redux/contacts.js/contacts-selectors.js","Filter/Filter.js","ContactList/ContactList.js","App.js","index.js","ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","error","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","axios","defaults","baseURL","Phonebook","useForm","register","handleSubmit","errors","useState","name","setName","number","setNumber","dispatch","useDispatch","myNamesInItem","useSelector","reset","handleChange","e","preventDefault","currentTarget","value","className","s","container","onSubmit","contactName","contactNumber","map","contact","toLocaleLowerCase","includes","alert","post","then","data","catch","label","input","autoComplete","type","ref","required","minLength","onChange","textError","pattern","btn","getValueForFilter","filterContactsByName","getContact","normalizedFilter","Filter","contactsActions","placeholder","ContactList","useEffect","a","get","ondeleteContact","contactId","delete","list","item","text","onClick","width","App","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b954901.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__35SJT\",\"item\":\"ContactList_item__E7Qu2\",\"text\":\"ContactList_text__34VS4\",\"btn\":\"ContactList_btn__2EGQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3F0Sj\",\"container\":\"App_container__3CzeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3FiU-\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contact/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contact/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contact/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest');\r\nexport const addContactSuccess = createAction('contact/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contact/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contact/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts.js/contacts-reducer';\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n// export { store, persistor };\r\nexport default store;\r\n\r\n// ***Redux***\r\n\r\n// import { createStore, combineReducers } from 'redux';\r\n// import { combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// const store = createStore(rooReducer, composeWithDevTools());\r\n// const rooReducer = combineReducers({contacts: contactsReducer});\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (contactName, contactNumber) => dispatch => {\r\n  const contact = {\r\n    name: contactName,\r\n    number: contactNumber,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../redux/contacts.js/contacts-operations';\r\nimport s from '../ContactForm/ContactForm.module.css';\r\n\r\nexport default function Phonebook() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const myNamesInItem = useSelector(state => state.contacts.items);\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const getContacts = myNamesInItem.map(contact =>\r\n      contact.name.toLocaleLowerCase(),\r\n    );\r\n\r\n    const isGetContactAlready = getContacts.includes(name.toLocaleLowerCase());\r\n\r\n    if (isGetContactAlready) {\r\n      reset();\r\n      return alert(`${name} is already in contacts!`);\r\n    }\r\n    dispatch(addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            autoComplete=\"off\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            ref={register({ required: true, minLength: 3 })}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        {errors.name && errors.name.type === 'required' && (\r\n          <p className={s.textError}>This is required </p>\r\n        )}\r\n\r\n        {errors.name && errors.name.type === 'minLength' && (\r\n          <p className={s.textError}>\r\n            This is field is required min length of 3\r\n          </p>\r\n        )}\r\n\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            autoComplete=\"off\"\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={number}\r\n            ref={register({\r\n              required: true,\r\n              pattern: /^[0-9]+$/gm,\r\n              minLength: 7,\r\n            })}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        {errors.number && errors.number.type === 'required' && (\r\n          <p className={s.textError}>This is required </p>\r\n        )}\r\n\r\n        {errors.number && errors.number.type === 'pattern' && (\r\n          <p className={s.textError}>There must be numbers</p>\r\n        )}\r\n\r\n        {errors.number && errors.number.type === 'minLength' && (\r\n          <p className={s.textError}>Number too short</p>\r\n        )}\r\n\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export const getValueForFilter = state => state.contacts.filter;\r\nexport const getContact = state => state.contacts.items;\r\n\r\nexport const filterContactsByName = state => {\r\n  const contacts = getContact(state);\r\n  const filter = getValueForFilter(state);\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLocaleLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as contactsActions from '../redux/contacts.js/contacts-actions';\r\nimport s from '../Filter/Filter.module.css';\r\nimport { getValueForFilter } from '../redux/contacts.js/contacts-selectors';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getValueForFilter);\r\n  const dispatch = useDispatch();\r\n  const OnFilterContacts = e =>\r\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\r\n\r\n  return (\r\n    <>\r\n      <label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={OnFilterContacts}\r\n          placeholder=\" Fined contacts by name\"\r\n        ></input>\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../redux/contacts.js/contacts-operations';\r\nimport { GoOrganization } from 'react-icons/go';\r\nimport { RiDeleteBin3Fill } from 'react-icons/ri';\r\nimport s from '../ContactList/ContactList.module.css';\r\nimport { filterContactsByName } from '../redux/contacts.js/contacts-selectors';\r\nimport { fetchContacts } from '../redux/contacts.js/contacts-operations';\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(filterContactsByName);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const ondeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={s.item} key={id}>\r\n            <GoOrganization />\r\n            <span className={s.text}>{name}: </span>\r\n            <span className={s.text}>{number}</span>\r\n            <button className={s.btn} onClick={() => ondeleteContact(id)}>\r\n              <RiDeleteBin3Fill value={{ width: 20 }} />{' '}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import s from './App.module.css';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\nexport default function App() {\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n// import { store, persistor } from './redux/store';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1xNPM\",\"label\":\"ContactForm_label__1ADTb\",\"container\":\"ContactForm_container__1ksKU\",\"btn\":\"ContactForm_btn__3yXGR\",\"textError\":\"ContactForm_textError__3e3XG\"};"],"sourceRoot":""}